Test Oui

2012

Name="dgCustomers"

<Grid Grid.Column="1">
    <StackPanel DataContext="{Binding SelectedItem, ElementName=listStudents}" HorizontalAlignment="Center">
        <Label Content="StudentId " Margin="6" />
        <TextBox Height="27" Margin="6,6,6,5" Text="{Binding StudentId, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False"/>
        <Label Content="Name " Margin="6" />
        <TextBox Height="27" Margin="6,6,6,5" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"/>
        <Label Content="Firstname " Margin="6" />
        <TextBox Height="27" Margin="6,6,6,5" Text="{Binding Firstname, UpdateSourceTrigger=PropertyChanged}"/>
        <Label Content="YearResult " Margin="6" />
        <TextBox Height="27" Margin="6,6,6,5" Text="{Binding YearResult, UpdateSourceTrigger=PropertyChanged}" Width="212"/>
    </StackPanel>
    <Button Command ="{Binding AddCommand}" Content="Add" Margin="65,320,246,49" />
    <Button Command ="{Binding SaveCommand}" Content="Save" Margin="264,330,44,43"/>
</Grid>

 private void AddStudent()
 {
     // Trace.Write($"llskkskdksddsssssss {SelectedStudent.StudentId}");
     // Créer une instance de l'entité Student à partir de SelectedStudent
     if (string.IsNullOrWhiteSpace(SelectedStudent.Name) || string.IsNullOrWhiteSpace(SelectedStudent.Firstname))
     {
         MessageBox.Show("Veuillez remplir tous les champs obligatoires.");
         return;
     }
 

     Student newStudent = new Student
     {
         StudentId = 0,
         Name = SelectedStudent.Name,
         Firstname = SelectedStudent.Firstname,                
         YearResult = SelectedStudent.YearResult
     };

     // Ajouter l'étudiant à la base de données
     dc.Students.Add(newStudent);
     dc.SaveChanges(); // Sauvegarder pour générer un ID

     // Ajouter à la liste observable
     StudentsList.Add(new StudentsModel(newStudent));

     MessageBox.Show("Ajout en base de données fait");

 }


<Window x:Class="ExamSept2022.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ExamSept2022"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0" >
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
        </Grid>


    </Grid>
</Window>


    class ProductVM : INotifyPropertyChanged
    {
        private NorthwindContext dc = new NorthwindContext();

        private ProductModel _selectedProduct;


        // Property changed standard handling
        public event PropertyChangedEventHandler PropertyChanged; // La view s'enregistera automatiquement sur cet event
        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName)); // On notifie que la propriété a changé
            }
        }

        private DelegateCommand _saveCommand;


        private ObservableCollection<ProductModel> _productsList;


        public ObservableCollection<ProductModel> ProductsList
        {
            get
            {
                return _productsList = loadProducts();

            }
        }


        private ObservableCollection<ProductModel> loadProducts()
        {
            ObservableCollection<ProductModel> products = new ObservableCollection<ProductModel>();
            foreach (var product in dc.Products)
            {
                products.Add(new ProductModel(product));
            }
            return products;
        }

  

        public ProductModel SelectedProduct
        {
            get { return _selectedProduct; }
            set { _selectedProduct = value; }

        }

        public DelegateCommand SaveCommand
        {
            get
            {
                return _saveCommand = _saveCommand ?? new DelegateCommand(SaveProduct);
            }
        }

        private void SaveProduct()
        {
            Product verif = dc.Products.Where(p => p.ProductId == SelectedProduct.MyProduct.ProductId).SingleOrDefault();
            if (verif == null)
            {
                dc.Products.Add(SelectedProduct.MyProduct);
            }

            dc.SaveChanges();
            MessageBox.Show("Enregistrement en base de données fait");
        }

    }













 <StackPanel Margin="220,10,10,10" HorizontalAlignment="Left" Width="300" DataContext="{Binding SelectedItem, ElementName=ProductList}">
     <!-- Diagnostic des données sélectionnées -->
     <TextBlock Text="Diagnostic SelectedProduct:" FontWeight="Bold" />
     <TextBlock Text="{Binding SelectedProduct.ProductId}" />
     <TextBlock Text="{Binding SelectedProduct.ProductName}" />
     <TextBlock Text="{Binding SelectedProduct.SupplierContactName}" />
     <TextBlock Text="{Binding SelectedProduct.QuantityPerUnit}" />
     <!-- ID du produit (non modifiable) -->
     <TextBlock Text="Product ID:" />
     <TextBox Text="{Binding SelectedProduct.ProductId}" IsEnabled="False" />

     <!-- Nom du produit -->
     <TextBlock Text="Product Name:" Margin="0,10,0,0"/>
     <TextBox Text="{Binding SelectedProduct.ProductName}" />

     <!-- Nom du contact du fournisseur (non modifiable) -->
     <TextBlock Text="Supplier Contact Name:" Margin="0,10,0,0"/>
     <TextBox Text="{Binding SelectedProduct.SupplierContactName}" IsEnabled="False" />

     <!-- Quantité par unité -->
     <TextBlock Text="Quantity Per Unit:" Margin="0,10,0,0"/>
     <TextBox Text="{Binding SelectedProduct.QuantityPerUnit}" />

     <!-- Bouton Maj -->
     <Button Content="Maj" Command="{Binding UpdateProductCommand}" />
 </StackPanel>


