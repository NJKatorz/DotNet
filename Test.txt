Test Oui

Name="dgCustomers"


<Window x:Class="ExamSept2022.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ExamSept2022"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0" >
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
        </Grid>


    </Grid>
</Window>


    class ProductVM : INotifyPropertyChanged
    {
        private NorthwindContext dc = new NorthwindContext();

        private ProductModel _selectedProduct;


        // Property changed standard handling
        public event PropertyChangedEventHandler PropertyChanged; // La view s'enregistera automatiquement sur cet event
        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName)); // On notifie que la propriété a changé
            }
        }

        private DelegateCommand _saveCommand;


        private ObservableCollection<ProductModel> _productsList;


        public ObservableCollection<ProductModel> ProductsList
        {
            get
            {
                return _productsList = loadProducts();

            }
        }


        private ObservableCollection<ProductModel> loadProducts()
        {
            ObservableCollection<ProductModel> products = new ObservableCollection<ProductModel>();
            foreach (var product in dc.Products)
            {
                products.Add(new ProductModel(product));
            }
            return products;
        }

  

        public ProductModel SelectedProduct
        {
            get { return _selectedProduct; }
            set { _selectedProduct = value; }

        }

        public DelegateCommand SaveCommand
        {
            get
            {
                return _saveCommand = _saveCommand ?? new DelegateCommand(SaveProduct);
            }
        }

        private void SaveProduct()
        {
            Product verif = dc.Products.Where(p => p.ProductId == SelectedProduct.MyProduct.ProductId).SingleOrDefault();
            if (verif == null)
            {
                dc.Products.Add(SelectedProduct.MyProduct);
            }

            dc.SaveChanges();
            MessageBox.Show("Enregistrement en base de données fait");
        }

    }

